Assignment: Building a Multi-Table Database With Relationships
-----------------------------------------------------------------

In this assignment, you will build a copy of the "Music" database covered in lecture. 
You will populate your database with tracks, artists, albums and genres that are different from the ones used in class. 
You must include three artists, five albums, and 20 tracks in your data. Choose a genre for each track. Your tables need to be normalized as described in class.

https://www.wa4e.com/assn/sql-tracks/
https://www.wa4e.com/lectures/SQL-02-MySQL-Design-Handout.txt

-----------------------------------------------------------------

CREATE DATABASE Music DEFAULT CHARACTER SET utf8;



CREATE TABLE Artist (
  artist_id INTEGER NOT NULL AUTO_INCREMENT,
  name VARCHAR(255),
  PRIMARY KEY(artist_id)
) ENGINE = InnoDB;

CREATE TABLE Album (
  album_id INTEGER NOT NULL AUTO_INCREMENT,
  title VARCHAR(255),
  artist_id INTEGER,

  PRIMARY KEY(album_id),
  INDEX USING BTREE (title),

  CONSTRAINT FOREIGN KEY (artist_id)
    REFERENCES Artist (artist_id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB;

CREATE TABLE Genre (
  genre_id INTEGER NOT NULL AUTO_INCREMENT,
  name VARCHAR(255),
  PRIMARY KEY(genre_id)
) ENGINE = InnoDB;

CREATE TABLE Track (
  track_id INTEGER NOT NULL AUTO_INCREMENT,
  title VARCHAR(255),
  len INTEGER,
  rating INTEGER,
  count INTEGER,
  album_id INTEGER,
  genre_id INTEGER,

  PRIMARY KEY(track_id),
  INDEX USING BTREE (title),

  CONSTRAINT FOREIGN KEY (album_id) REFERENCES Album (album_id)
    ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT FOREIGN KEY (genre_id) REFERENCES Genre (genre_id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB;



INSERT INTO Artist (name) VALUES ('Led Zepplin');
INSERT INTO Artist (name) VALUES ('AC/DC');
INSERT INTO Artist (name) VALUES ('Taylor Swift');

INSERT INTO Genre (name) VALUES ('Rock');
INSERT INTO Genre (name) VALUES ('Metal');
INSERT INTO Genre (name) VALUES ('Country Pop');

INSERT INTO Album (title, artist_id) VALUES ('Who Made Who', 2);
INSERT INTO Album (title, artist_id) VALUES ('IV', 1);
INSERT INTO Album (title, artist_id) VALUES ('Folklore', 3);
INSERT INTO Album (title, artist_id) VALUES ('In Through the Out Door', 1);
INSERT INTO Album (title, artist_id) VALUES ('Back in Black', 2);


INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('Black Dog', 5, 297, 0, 2, 1);
INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('Stairway', 5, 482, 0, 2, 1);
INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('Going to California', 3, 332, 0, 2, 1);
INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('Misty Mountain Hop', 5, 445, 0, 2, 1);
INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('In the Evening', 5, 653, 0, 4, 1);
INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('Hot Dog', 4, 316, 0, 4, 1);
INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('The Hook', 3, 551, 0, 4, 1);
INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('Blot', 5, 533, 0, 4, 1);

INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('About to Rock', 5, 313, 0, 1, 2);
INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('Who Made Who', 5, 207, 0, 1, 2);
INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('You Shook Me All Night Long', 5, 330, 0, 1, 2);
INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('Shake Your Foundations', 3, 353, 0, 1, 2);
INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('Have a Drink on Me', 5, 357, 0, 5, 2);
INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('Shake a Leg', 5, 406, 0, 5, 2);
INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('Back in Black', 5, 414, 0, 5, 2);
INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('Shoot to Thrill', 5, 517, 0, 5, 2);

INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('The Last Great American Dynasty', 5, 351, 0, 3, 3);
INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('Mirrorball', 5, 329, 0, 3, 3);
INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('Seven', 5, 328, 0, 3, 3);
INSERT INTO Track (title, rating, len, count, album_id, genre_id)
    VALUES ('August', 5, 421, 0, 3, 3);


-------------------------------------------------------------------------------------------

SELECT * FROM Track

SELECT Track.title, Artist.name, Album.title, Genre.name, Track.len 
    FROM Track JOIN Genre JOIN Album JOIN Artist 
    ON Track.genre_id = Genre.genre_id AND Track.album_id = 
    Album.album_id AND Album.artist_id = Artist.artist_id 
    ORDER BY album.title

SELECT DISTINCT Artist.name, Genre.name FROM Track JOIN Genre JOIN Album JOIN Artist 
    ON Track.genre_id = Genre.genre_id AND Track.album_id = Album.album_id 
    AND Album.artist_id = Artist.artist_id 
    WHERE Artist.name = "Taylor Swift"


--------------------------------------------------------------------------------------------

Optional Assignment :
Come up with a query using GROUP BY to show the number of tracks an Artist has in each Genre.

SELECT Count(Track.track_id), Artist.name 
    from Track JOIN Genre JOIN Album JOIN Artist 
    ON Track.genre_id = Genre.genre_id AND Track.album_id = 
    Album.album_id AND Album.artist_id = Artist.artist_id 
    GROUP BY artist.name
